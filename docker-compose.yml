version: "3.9"

services:
  server:
    build:
      context: .
    environment:
      DATABASE_URL: "jdbc:postgresql://db:5432/sharedcard"
      SERVER_PORT: "8081"
      LOGIN: "postgres"
      PASSWORD: "qwe321loi"
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_started
  db:
    image: postgres:latest 
    environment:
      POSTGRES_DB: "sharedcard"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "qwe321loi"
    ports:
      - "5432:5432"
    depends_on:
      rabbitmq:
        condition: service_started
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-stomp
    ports:
      - "5672:5672"
      - "61613:61613"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_stomp rabbitmq_management && rabbitmq-server"
volumes:

  rabbitmq_data:
#  grafana:
#    image: grafana/grafana
#    ports:
#      - "3000:3000"
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#  swagger-ui:
#    image: swaggerapi/swagger-ui
#    container_name: swagger-ui
#    ports:
#      - "8001:8080"
#    volumes:
#      - ./swagger:/usr/share/nginx/html/swagger
#    environment:
#      API_URL: swagger/api.yaml
